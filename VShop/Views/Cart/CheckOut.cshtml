@model OrderDTO

@{
    var products = new List<ProductCartDTO>();
    if(ViewData["Products"] != null){
        products = ViewData["Products"] as List<ProductCartDTO>;
    }
    int deliveryFree = 20000;


}
<!--Checkout page section-->
<div class="checkout_section" id="accordion">
    <div class="container">
        <div class="returning_coupon_area">
            <div class="row">
                <div class="col-lg-5 col-md-6">
                    <div class="user-actions">
                        <h3>
                            <i class="fa fa-comment-o" aria-hidden="true"></i>
                            Have a Coupon ?
                            <a class="Returning" href="#" data-toggle="collapse" data-target="#checkout_coupon2" aria-expanded="true">Click here to enter your code</a>

                        </h3>
                        <div id="checkout_coupon2" class="collapse" data-parent="#accordion">
                            <div class="checkout_info coupon_info">
                                <form action="#">
                                    <input placeholder="Coupon code" type="text">
                                    <button class="btn btn-primary" type="submit">Apply coupon</button>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <form asp-controller="Cart" asp-action="Checkout" method="post">
            <div class="checkout_form">
                <div class="row">
                    <div class="col-lg-6 col-md-6">                    
                        <h3>Billing Details</h3>
                        <div class="checkout_form_input">
                            <label>Họ và tên<span>*</span></label>
                            <input asp-for="FullName">
                            <span asp-validation-for="FullName" class="text-danger"></span>
                        </div>
                        <div class="checkout_form_input">
                            <label>Email<span>*</span></label>
                            <input asp-for="Email">
                            <span asp-validation-for="Email" class="text-danger"></span>
                        </div>
                        <div class="checkout_form_input">
                            <label>Số điện thoại<span>*</span></label>
                            <input asp-for="PhoneNumber">
                            <span asp-validation-for="PhoneNumber" class="text-danger"></span>
                        </div>
                        <div class="checkout_form_input">
                            <label>Địa chỉ <span>*</span></label>
                            <input asp-for="Address">
                            <span asp-validation-for="Address" class="text-danger"></span>
                        </div>
                        <div class="checkout_form_input">
                            <label for="province">Tỉnh/Thành phố:</label>
                            <select id="province" asp-for="Province" class="form-select" required></select>
                        </div>
                        <div class="checkout_form_input">
                            <label for="district">Quận/Huyện:</label>
                            <select id="district" asp-for="District" class="form-select" required></select>
                        </div>
                        <div class="checkout_form_input">
                            <label for="ward">Phường/Xã:</label>
                            <select id="ward" asp-for="Ward" class="form-select" required></select>
                        </div>
                    </div>
                    <div class="col-lg-6 col-md-6">
                        <div class="order_table_right">
                            <h3>Đơn hàng của bạn</h3>
                            <div class="order_table table-responsive">
                                <table>
                                    <thead>
                                        <tr>
                                            <th>Sản phẩm</th>
                                            <th>Số lượng</th>
                                            <th class="text-right">Tổng tiền</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (products != null && products.Any()) {
                                            @foreach (ProductCartDTO productCartDTO in products)
                                            {
                                                <tr>
                                                    <td> <img src="/@productCartDTO.Image"  style="max-width:50px"/> @productCartDTO.Name</td>
                                                    <td> @productCartDTO.Quantity</td>
                                                    <td class="text-right"> @productCartDTO.SumPrice.GetValueOrDefault(0).ToString("C0", new System.Globalization.CultureInfo("vi-VN"))</td>
                                                </tr>
                                            }

                                        }                                       
                                    </tbody>
                                    <tfoot>
                                        <tr>
                                            <td >Cart Subtotal  </td>
                                            <td class="text-right">@products.Sum(x => x.SumPrice).GetValueOrDefault(0).ToString("C0", new System.Globalization.CultureInfo("vi-VN"))</td>
                                        </tr>

                                        <tr>
                                            <td>Delivery Free</td>
                                            <td class="text-right">@deliveryFree.ToString("C0", new System.Globalization.CultureInfo("vi-VN"))</td>
                                        </tr>

                                        <tr class="order_total">
                                            <th>Order Total</th>
                                            @{
                                                var total = products.Sum(x => x.SumPrice) + deliveryFree;
                                            }
                                            <td class="text-right">@total.GetValueOrDefault(0).ToString("C0", new System.Globalization.CultureInfo("vi-VN"))</td>
                                        </tr>
                                    </tfoot>
                                </table>
                                <div class="panel-default">
                                    <div class="panel_radio">
                                        <input id="payment1" asp-for="TypePayment" value="0" type="radio"/>
                                        <span class="checkmark"></span>
                                    </div>

                                    <label for="payment1" data-toggle="collapse" data-target="#panel1">VNPay</label>
                                </div>
                                <div class="panel-default">
                                    <div class="panel_radio">
                                        <input id="payment2" asp-for="TypePayment" value="1" type="radio" />
                                        <span class="checkmark"></span>
                                    </div>
                                    <label for="payment2" data-toggle="collapse" data-target="#method3">Thanh toán khi nhận hàng</label>
                                </div>                              
                            </div>
                            <div class="place_order_btn">
                                <button type="submit">place order</button>
                            </div>

                    </div>
                </div>
            </div>
        </div>
        </form>
    </div>
</div>


    <script>
            const provinceSelect = document.getElementById("province");
    const districtSelect = document.getElementById("district");
    const wardSelect = document.getElementById("ward");

    // Hàm tạo option cho select
    function createOption(value, text) {
      const option = document.createElement("option");
      option.value = text; // Thay đổi từ code sang tên
      option.text = text;
      option.dataset.code = value; // Lưu code vào data attribute để tham chiếu API
      return option;
    }

    // Hàm lấy dữ liệu từ API và hiển thị danh sách tỉnh/thành phố
    async function getProvinces() {
      try {
        const response = await fetch("https://provinces.open-api.vn/api/");
        const provinces = await response.json();
        // Thêm option mặc định
        provinceSelect.appendChild(createOption("", "Chọn Tỉnh/Thành phố"));
        // Thêm các option tỉnh/thành phố
        provinces.forEach(province => {
          provinceSelect.appendChild(createOption(province.code, province.name));
        });
      } catch (error) {
        console.error("Lỗi khi lấy dữ liệu tỉnh/thành phố:", error);
      }
    }

    // Gọi hàm lấy dữ liệu khi trang web được tải
    getProvinces();

    // Hàm cập nhật danh sách quận/huyện
    async function updateDistricts(provinceCode) {
      districtSelect.innerHTML = '<option value="">Chọn Quận/Huyện</option>'; // Xóa các option cũ
      wardSelect.innerHTML = '<option value="">Chọn Phường/Xã</option>';  // Xóa các option cũ

      if (provinceCode) {
        try {
          // Lấy code từ selected option
          const selectedOption = [...provinceSelect.options].find(option => option.value === provinceCode);
          const actualCode = selectedOption ? selectedOption.dataset.code : null;

          if (actualCode) {
            const apiUrl = `https://provinces.open-api.vn/api/p/${actualCode}?depth=2`;
            const response = await fetch(apiUrl);
            const province = await response.json();

            if (province && province.districts) {
              province.districts.forEach(district => {
                districtSelect.appendChild(createOption(district.code, district.name));
              });
            }
          }
        } catch (error) {
          console.error("Lỗi khi lấy dữ liệu quận/huyện:", error);
        }
      }
    }

    // Hàm cập nhật danh sách phường/xã
    async function updateWards(districtName) {
      wardSelect.innerHTML = '<option value="">Chọn Phường/Xã</option>'; // Xóa các option cũ

      if (districtName) {
        try {
          // Lấy code từ selected option
          const selectedOption = [...districtSelect.options].find(option => option.value === districtName);
          const actualCode = selectedOption ? selectedOption.dataset.code : null;

          if (actualCode) {
            const response = await fetch(`https://provinces.open-api.vn/api/d/${actualCode}?depth=2`);
            const district = await response.json();

            if (district && district.wards) {
              district.wards.forEach(ward => {
                wardSelect.appendChild(createOption(ward.code, ward.name));
              });
            }
          }
        } catch (error) {
          console.error("Lỗi khi lấy dữ liệu phường/xã", error);
        }
      }
    }

    // Sự kiện khi chọn tỉnh/thành phố
    provinceSelect.addEventListener("change", function() {
      updateDistricts(this.value);
    });

    // Sự kiện khi chọn quận huyện
    districtSelect.addEventListener("change", function(){
      updateWards(this.value);
    });

    </script>
